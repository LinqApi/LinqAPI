// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Posonl.Infrastructure;

#nullable disable

namespace Posonl.Infrastructure.Migrations.LinqLog
{
    [DbContext(typeof(LinqLogContext))]
    [Migration("20250409125815_initial_1")]
    partial class initial_1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LinqApi.Core.Log.LinqLogEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Action")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AdditionalData")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ClientIP")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Controller")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CorrelationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("DurationMs")
                        .HasColumnType("bigint");

                    b.Property<long>("Epoch")
                        .HasColumnType("bigint");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsException")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInternal")
                        .HasColumnType("bit");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Method")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OperationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ParentCorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("QueueName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RequestBody")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Logs", "log");

                    b.HasDiscriminator<string>("LogType").HasValue("LinqLogEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("LinqApi.Logging.HttpCallInboundError", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("HttpCallInboundError");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqConsumeErrorLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ConsumeError");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqEventLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestPayload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsePayload")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasDiscriminator().HasValue("Event");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqHttpCallLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("LinqHttpCallLog");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqPublishErrorLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PublishError");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqSqlErrorLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DatabaseError");
                });

            modelBuilder.Entity("LinqApi.Logging.LinqSqlLog", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("CommandType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueryText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Database");
                });

            modelBuilder.Entity("LinqApi.Logging.OutboundHttpCallError", b =>
                {
                    b.HasBaseType("LinqApi.Core.Log.LinqLogEntity");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .ValueGeneratedOnUpdateSometimes()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("HttpCallOutboundError");
                });

            modelBuilder.Entity("LinqApi.Core.Log.InboundHttpCallLog", b =>
                {
                    b.HasBaseType("LinqApi.Logging.LinqHttpCallLog");

                    b.HasDiscriminator().HasValue("HttpCallInbound");
                });

            modelBuilder.Entity("LinqApi.Core.Log.OutboundHttpCallLog", b =>
                {
                    b.HasBaseType("LinqApi.Logging.LinqHttpCallLog");

                    b.HasDiscriminator().HasValue("HttpCallOutbound");
                });
#pragma warning restore 612, 618
        }
    }
}
