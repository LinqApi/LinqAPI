@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
    ViewData["Title"] = "Country Query";
}
<div class="container mt-4">
    <h2>LINQ Query Builder Demo (Country)</h2>
    <!-- Container for the QueryBuilder UI -->
    <div id="queryBuilderContainer"></div>
    <hr>
    <!-- Container for the dynamic data table -->
    <div id="dataTableContainer"></div>
</div>

   @section Scripts {
    <script type="module">
        import { QueryBuilder } from '/js/ui/QueryBuilder.js';
        import { LinqDataTable } from '/js/ui/LinqDataTable.js';
        import { StateManager } from '/js/core/State.js';

        // Shared state manager instance.
        const state = new StateManager({ query: null });

        // Initialize QueryBuilder
        const qbContainer = document.getElementById("queryBuilderContainer");
        const queryBuilder = new QueryBuilder({
            container: qbContainer,
            controller: "Country",
            stateManager: state,
            intellisense: false,
            debug: true
        });
        queryBuilder.init();

        // Initialize LinqDataTable (benzer ÅŸekilde)
        const dtContainer = document.getElementById("dataTableContainer");
        const dataTable = new LinqDataTable({
            container: dtContainer,
            controller: "Country",
            stateManager: state,
            debug: true
        });
        dataTable.init();

        // Subscribe to state changes.
        state.subscribe(async (s) => {
            if (s.query) {
                await dataTable.fetchDataFromQuery(s.query);
                dataTable.render();
            }
        });
    </script>
}

